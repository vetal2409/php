<?php
/**
 * Author: Vitalii Sydorenko <vetal.sydo@gmail.com>
 */
?>
<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title></title>
</head>
<body>
<h1><a href="../">SOLID</a></h1>
<h2>Open/closed principle - Принцип открытости / закрытости</h2>
<p>Классы должны быть открыты для расширения и закрыты для изменения. Инными словами, приложения следует проектировать
    таким образом что бы для изменения поведения класа нам не потребовалось менять код самого класса.</p>

<p>Пример нарушения принципа - для логированя продукта мы используем класс Logger, который логирует в файл, но что если
    вдруг нам нужно логировать в базу данных? мы не можем просто поменять класс Logger так как другие классы могут его
    использовать для логирования в файл.
    <br>
    Решение - создаем интерфейс ILogger и создаём соответствующие классы: DBLogger, FileLogger которые реализуют
    интерфейс ILogger. У этих 2ух классах будет реализован метод log($message).
    <br>
    При таком подходе нам не придётся менять классы при изменении метода логирования.</p>
</body>
</html>
